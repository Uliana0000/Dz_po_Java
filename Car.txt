public class Car   //Создали класс,в котором описывается вектор (в трёхмерном пространстве).
{
    double x;
    double y;
    double z;
    
    public Car(double x, double y, double z) {    //создаём конструктор
        this.x = x;
        this.y = y;
        this.z = z;
    }   
    
    public static void main(String[] args) {
		System.out.println("Hello World");
		Car vector1 = new Car(1, 2, 3);      // создали объект класса - вектор1 (у него координаты - х1, y1, z1)
		Car vector2 = new Car(4, 5, 6);      // создали объект класса - вектор2 (у него координаты - х2, y2, z2)
		Dlina_vectora(vector1);
		scalarnoe_proizvedenie(vector1, vector2);
		vectornoe_proizvedenie(vector1, vector2);
		Ugol_mezdu_vectorami(vector1, vector2);
		slozenie(vector1, vector2);
		vichitanie(vector1, vector2);
    }
		
		
	static double Dlina_vectora(Car vector1) {        //b. метод, вычисляющий длину вектора
        return Math.sqrt(Math.pow(vector1.x,2) +Math.pow(vector1.y,2) + Math.pow(vector1.z,2));
    }

    static double scalarnoe_proizvedenie(Car vector1, Car vector2) {    //c.	метод, вычисляющий скалярное произведение
        return vector1.x*vector2.x + vector1.y*vector2.y + vector1.z*vector2.z;
    }

    static  Car vectornoe_proizvedenie (Car vector1, Car vector2) {   //d.	метод, вычисляющий векторное произведение с другим вектором
        return new Car(vector1.y*vector2.z - vector1.z*vector2.y,
                vector1.z*vector2.x - vector1.x*vector2.z,
                vector1.x*vector2.y - vector1.y*vector2.x);
    }

    static double Ugol_mezdu_vectorami (Car vector1, Car vector2) {      //e.	метод, вычисляющий угол между векторами (или косинус угла): 
        
        return (vector1.x*vector2.x + vector1.y*vector2.y + vector1.z*vector2.z)/ (Math.sqrt(Math.pow(vector1.x,2) +Math.pow(vector1.y,2) + Math.pow(vector1.z,2))*Math.sqrt(Math.pow(vector2.x,2) +Math.pow(vector2.y,2) + Math.pow(vector2.z,2)));
    }

    static Car slozenie (Car vector1, Car vector2) {    //f.	метод для суммы 
        return new Car(vector1.x+vector2.x,
                vector1.y+vector2.y,
                vector1.z+vector2.z);
    }
    
    static Car vichitanie (Car vector1, Car vector2) {    //f.	метод для разности
        return new Car(vector1.x-vector2.x,
                vector1.y-vector2.y,
                vector1.z-vector2.z);
    }
        
}